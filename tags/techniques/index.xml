<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>techniques - Tag - Xing Lin</title>
        <link>https://example.com/tags/techniques/</link>
        <description>techniques - Tag - Xing Lin</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>linxingnku@gmail.com (Xing Lin)</managingEditor>
            <webMaster>linxingnku@gmail.com (Xing Lin)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 15 Jan 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://example.com/tags/techniques/" rel="self" type="application/rss+xml" /><item>
    <title>Enduring Ideas/Techniques that are still in use today</title>
    <link>https://example.com/enduring-ideas/</link>
    <pubDate>Fri, 15 Jan 2021 00:00:00 &#43;0000</pubDate>
    <author>Xing Lin</author>
    <guid>https://example.com/enduring-ideas/</guid>
    <description><![CDATA[There are a few ideas/techniques that were invented a long time ago but they are being used/re-implemented again and again, even in today&rsquo;s sytems. Why do people look and reimplement these techniques, even after 50 years? Because, even after 50 years, we face largely the same problem when we design new systems.
Here are a few examples.
   Ideas First-time Introduced What problem is solved?     Trasactions  Make it easy to develop on top of a data store.]]></description>
</item>
</channel>
</rss>
